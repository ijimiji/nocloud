name: Delete old container images

on:
  schedule:
    - cron: '0 0 * * *'  # every day at midnight
  workflow_dispatch:

jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set target tags
        id: set-tags-matrix
        run: echo "::set-output name=matrix::$(ls Dockerfiles | jq -cnR '[inputs | select(length>0)]')"

    outputs:
      matrix: ${{steps.set-tags-matrix.outputs.matrix}}
  clean-ghcr-base:
    name: Cleanup Base Image
    runs-on: ubuntu-latest
    steps:
      - name: Untagged Images (> 1 day)
        uses: snok/container-retention-policy@v1
        with:
          image-names: nocloud/base
          cut-off: A day ago UTC
          account-type: personal
          untagged-only: true
          token: ${{ secrets.PACKAGES_PAT }}

      - name: Dev Images (> 2 weeks)
        uses: snok/container-retention-policy@v1
        with:
          image-names: nocloud/base
          cut-off: 2 weeks ago UTC
          account-type: personal
          filter-tags: dev-*
          filter-include-untagged: true
          token: ${{ secrets.PACKAGES_PAT }}
  clean-ghcr:
    name: Cleanup
    runs-on: ubuntu-latest
    needs: [prepare]
    strategy:
      matrix:
        tag: ${{fromJson(needs.prepare.outputs.matrix)}}
    steps:
      - name: Untagged Images (> 1 day)
        uses: snok/container-retention-policy@v1
        with:
          image-names: nocloud/${{matrix.tag}}
          cut-off: A day ago UTC
          account-type: personal
          untagged-only: true
          token: ${{ secrets.PACKAGES_PAT }}

      - name: Dev Images (> 2 weeks)
        uses: snok/container-retention-policy@v1
        with:
          image-names: nocloud/${{matrix.tag}}
          cut-off: 2 weeks ago UTC
          account-type: personal
          filter-tags: dev-*
          filter-include-untagged: true
          token: ${{ secrets.PACKAGES_PAT }}
