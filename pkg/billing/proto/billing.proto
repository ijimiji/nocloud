/*
Copyright Â© 2021-2022 Nikita Ivanovski info@slnt-opp.xyz

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
syntax = "proto3";
package nocloud.billing;

import "pkg/states/proto/states.proto";
import "google/protobuf/struct.proto";

message Plan {
    string title = 1;
    // Map of resource keys to their configurations
    // Resouce key is one of driver supported keys, like cpu, ram, etc.
    map<string, ResourceConf> resources = 2;
}

enum Kind {
    UNSPECIFIED = 0; // Shall never be used, requests will be rejected
    POSTPAID    = 1; // Transaction must be processed based on End time
    PREPAID     = 2; // Transaction must be processed based on Start time
}

message ResourceConf {
    Kind kind = 1;
    float price = 2;
    uint64 period = 3; // if set to 0, then it's a one-time payment
    // If except set to true then transaction will be created if Instance is in one of the states listed in on
    // If except set to false then transaction will be created if Instance is NOT in one of the states listed in on
    bool except = 4;
    repeated nocloud.states.NoCloudState on = 5;
}

message Transaction {
    string uuid = 1; // transaction UUID
    uint64 exec = 2; // Timestamp of Transaction planned execution time
    uint64 proc = 3; // Timestamp of Transaction processing time
    bool processed = 4; // Wether Transaction has been processed(applied to Account balance, etc)

    string account = 5;
    string service = 6;
    repeated string records = 7; // list of records UUIDs

    float total = 8; // Transaction total value in NCU
    /* Transaction meta data, like
        meta: {
            total: <number> // resource "quantity", e.g. CPU cores, RAM Mb, Drive Mb, IP quantity
            price_atm: <number> // hourly price per quant of resouce at the moment, e.g. 1 NCU 
            [other keys]: <any> // for example Drive Type(SSD/HDD/NVMe/etc)
        }
    */
    map<string, google.protobuf.Value> meta = 9;
}

message Record {
    string uuid = 1; // Record UUID
    uint64 start = 2; // Timestamp of Record coverage frame start
    uint64 end = 3; // Timestamp of Record coverage frame end

    uint64 proc = 4; // Timestamp of Record processing time
    bool processed = 5; // Wether Record has been processed(converted to Transaction)

    string instance = 6; // Instance UUID
    string resource = 7; // Resource key

    float total = 8; // Record total value in NCU
    /* Record meta data, like
        meta: {
            total: <number> // resource "quantity", e.g. CPU cores, RAM Mb, Drive Mb, IP quantity
            price_atm: <number> // hourly price per quant of resouce at the moment, e.g. 1 NCU 
            [other keys]: <any> // for example Drive Type(SSD/HDD/NVMe/etc)
        }
    */
    map<string, google.protobuf.Value> meta = 9;
}