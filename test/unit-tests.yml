version: "3.8"
services:
  proxy:
    image: traefik:latest
    restart: always
    labels:
      - traefik.http.routers.api.rule=Host(`traefik.${BASE_DOMAIN}`)
      - traefik.http.routers.api.entrypoints=http
      - traefik.http.routers.api.service=api@internal
      - traefik.http.entrypoints.db.address=:3306
    ports:
      - 80:80
      - 8000:8000
      - 8080:8080
    volumes:
      - ./traefik.yml:/traefik.yml
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - proxy

  web:
    image: ghcr.io/slntopp/nocloud/apiserver-web:latest
    restart: always
    depends_on:
      - proxy
    labels:
      - traefik.http.routers.web.rule=Host(`api.${BASE_DOMAIN}`)
      - traefik.http.routers.web.entrypoints=http
      - traefik.http.services.web.loadbalancer.server.port=8000
    environment:
      LOG_LEVEL: -1
      WITH_BLOCK: "false"
      APISERVER_HOST: "proxy:8000"
    networks:
      - proxy


  db:
    ports:
      - "8529:8529"
    image: arangodb/arangodb:latest
    restart: always
    labels:
      - traefik.http.routers.db.rule=Host(`db.${BASE_DOMAIN}`)
      - traefik.http.routers.db.entrypoints=db
      - traefik.http.services.db.loadbalancer.server.port=8529
    environment:
      ARANGO_ROOT_PASSWORD: "${DB_PASS}"
    volumes:
      - data:/var/lib/arangodb3
    networks:
      - proxy
      - arangodb

  rabbitmq:
    restart: always
    image: rabbitmq:3.9-management
    labels:
      - traefik.http.routers.rabbitmq.rule=Host(`rbmq.nocloud.local`)
      - traefik.http.routers.rabbitmq.entrypoints=http
      - traefik.http.services.rabbitmq.loadbalancer.server.port=15672
    networks:
      - mq
      - proxy
    environment:
      RABBITMQ_DEFAULT_USER: "${RABBITMQ_USER}"
      RABBITMQ_DEFAULT_PASS: "${RABBITMQ_PASS}"
  

  sp-registry:
    expose:
      - "8000"
    working_dir: /nocloud
    volumes:
      - ./nocloud:/nocloud
    image: cosmtrek/air
    command: --build.cmd "go build -o bin/sp_registry cmd/sp_registry/*.go" --build.bin "./bin/sp_registry"
    container_name: sp-registry
    restart: always
    labels:
      - traefik.http.routers.services_providers.rule=PathPrefix("/nocloud.services_providers.")
      - traefik.http.routers.services_providers.entrypoints=grpc
      - traefik.http.services.services_providers.loadbalancer.server.port=8000
      - traefik.http.services.services_providers.loadbalancer.server.scheme=h2c
    environment:
      LOG_LEVEL: -1
      PORT: 8000
      SIGNING_KEY: "${SIGNING_KEY}"
      DB_HOST: db:8529
      DB_CRED: "${DB_USER}:${DB_PASS}"
      SETTINGS_HOST: settings:8000
      DRIVERS: driver-ione:8080
      RABBITMQ_CONN: amqp://${RABBITMQ_USER}:${RABBITMQ_PASS}@rabbitmq:5672/
    depends_on:
      - db
      - settings
      - driver-ione
    networks:
      - proxy
      - arangodb
      - grpc-internal
      - mq
    links:
      - db

  edge:
    expose:
      - "8000"
    working_dir: /nocloud
    volumes:
      - ./nocloud:/nocloud
    image: cosmtrek/air
    command: --build.cmd "go build -o bin/edge cmd/edge/*.go" --build.bin "./bin/edge"
    restart: always
    labels:
      - traefik.http.routers.edge.rule=PathPrefix("/nocloud.edge.")
      - traefik.http.routers.edge.entrypoints=grpc
      - traefik.http.services.edge.loadbalancer.server.port=8000
      - traefik.http.services.edge.loadbalancer.server.scheme=h2c
    environment:
      LOG_LEVEL: -1
      PORT: 8000
      SIGNING_KEY: "${SIGNING_KEY}"
      RABBITMQ_CONN: amqp://${RABBITMQ_USER}:${RABBITMQ_PASS}@rabbitmq:5672/
    networks:
      - proxy
      - mq
    links:
      - db


  health:
    expose:
      - "8000"
    working_dir: /nocloud
    volumes:
      - ./nocloud:/nocloud
    image: cosmtrek/air
    command: --build.cmd "go build -o bin/health cmd/health/*.go" --build.bin "./bin/health"
    restart: always
    labels:
      - traefik.http.routers.health.rule=PathPrefix("/nocloud.health.")
      - traefik.http.routers.health.entrypoints=grpc
      - traefik.http.services.health.loadbalancer.server.port=8000
      - traefik.http.services.health.loadbalancer.server.scheme=h2c
    environment:
      LOG_LEVEL: -1
      PORT: 8000
      SIGNING_KEY: "${SIGNING_KEY}"
      PROBABLES: registry:8000,billing:8000,services-registry:8000,sp-registry:8000,settings:8000,dns-mgmt:8000,edge:8000
    networks:
      - proxy
      - grpc-internal

  # chat:
  #   expose:
  #     - "8000"
  #   working_dir: /nocloud-cc
  #   volumes:
  #     - ./nocloud-cc:/nocloud-cc
  #   image: cosmtrek/air
  #   command: --build.cmd "go build -o bin/chats cmd/chat/*.go" --build.bin "./bin/chats"
  #   restart: always
  #   labels:
  #     - traefik.http.routers.chats.rule=PathPrefix("/nocloud.chats.")
  #     - traefik.http.routers.chats.entrypoints=grpc
  #     - traefik.http.services.chats.loadbalancer.server.port=8000
  #     - traefik.http.services.chats.loadbalancer.server.scheme=h2c
  #   environment:
  #     LOG_LEVEL: -1
  #     PORT: 8000
  #     DB_HOST: db:8529
  #     DB_CRED: "${DB_USER}:${DB_PASS}"
  #     NOCLOUD_ROOT_PASSWORD: "${NOCLOUD_ROOT_PASS}"
  #     SIGNING_KEY: "${SIGNING_KEY}"
  #     SETTINGS_HOST: settings:8000
  #   depends_on:
  #     - db
  #   networks:
  #     - proxy
  #     - arangodb
  #     - grpc-internal
  #   links:
  #     - db

  registry:
    expose:
      - "8000"
    working_dir: /nocloud
    volumes:
      - ./nocloud:/nocloud
    image: cosmtrek/air
    command: --build.cmd "go build -o bin/registry cmd/registry/*.go" --build.bin "./bin/registry"
    restart: always
    labels:
      - traefik.http.routers.registry.rule=PathPrefix("/nocloud.registry.")
      - traefik.http.routers.registry.entrypoints=grpc
      - traefik.http.services.registry.loadbalancer.server.port=8000
      - traefik.http.services.registry.loadbalancer.server.scheme=h2c
    environment:
      LOG_LEVEL: -1
      PORT: 8000
      DB_HOST: db:8529
      DB_CRED: "${DB_USER}:${DB_PASS}"
      NOCLOUD_ROOT_PASSWORD: "${NOCLOUD_ROOT_PASS}"
      SIGNING_KEY: "${SIGNING_KEY}"
      SETTINGS_HOST: settings:8000
    depends_on:
      - db
      - driver-ione
    networks:
      - proxy
      - arangodb
      - grpc-internal
    links:
      - db

  services-registry:
    expose:
      - "8000"
    working_dir: /nocloud
    volumes:
      - ./nocloud:/nocloud
    image: cosmtrek/air
    command: --build.cmd "go build -o bin/services_registry cmd/services_registry/*.go" --build.bin "./bin/services_registry"
    container_name: services-registry
    restart: always
    labels:
      - traefik.http.routers.services.rule=PathPrefix("/nocloud.services.", "/nocloud.instances.")
      - traefik.http.routers.services.entrypoints=grpc
      - traefik.http.services.services.loadbalancer.server.port=8000
      - traefik.http.services.services.loadbalancer.server.scheme=h2c
    environment:
      LOG_LEVEL: -1
      PORT: 8000
      SIGNING_KEY: "${SIGNING_KEY}"
      DB_HOST: db:8529
      DB_CRED: "${DB_USER}:${DB_PASS}"
      SETTINGS_HOST: settings:8000
      BILLING_HOST: billing:8000
      DRIVERS: driver-ione:8080
      RABBITMQ_CONN: amqp://${RABBITMQ_USER}:${RABBITMQ_PASS}@rabbitmq:5672/
    depends_on:
      - db
      - billing
      - driver-ione
    networks:
      - proxy
      - arangodb
      - grpc-internal
      - mq
    links:
      - db
      - billing

  billing:
    expose:
      - "8000"
    working_dir: /nocloud
    volumes:
      - ./nocloud:/nocloud
    image: cosmtrek/air
    command: --build.cmd "go build -o bin/billing cmd/billing/*.go" --build.bin "./bin/billing"
    restart: always
    labels:
      - traefik.http.routers.billing.rule=PathPrefix("/nocloud.billing.")
      - traefik.http.routers.billing.entrypoints=grpc
      - traefik.http.services.billing.loadbalancer.server.port=8000
      - traefik.http.services.billing.loadbalancer.server.scheme=h2c
    depends_on:
      - db
      - settings
    networks:
      - proxy
      - arangodb
      - grpc-internal
      - mq
    environment:
      LOG_LEVEL: -1
      SIGNING_KEY: "${SIGNING_KEY}"
      DB_HOST: db:8529
      DB_CRED: "${DB_USER}:${DB_PASS}"
      SETTINGS_HOST: settings:8000
      PORT: 8000
      RABBITMQ_CONN: amqp://${RABBITMQ_USER}:${RABBITMQ_PASS}@rabbitmq:5672/
    links:
      - db

  dns-mgmt:
    expose:
      - "8000"
    working_dir: /nocloud
    volumes:
      - ./nocloud:/nocloud
    image: cosmtrek/air
    command: --build.cmd "go build -o bin/dns_mgmt cmd/dns_mgmt/*.go" --build.bin "./bin/dns_mgmt"
    restart: always
    labels:
      - traefik.http.routers.dns.rule=PathPrefix("/nocloud.dns.")
      - traefik.http.routers.dns.entrypoints=grpc
      - traefik.http.services.dns.loadbalancer.server.port=8000
      - traefik.http.services.dns.loadbalancer.server.scheme=h2c
    networks:
      - proxy
      - grpc-internal
      - redis
    environment:
      LOG_LEVEL: -1
      PORT: 8000
      SIGNING_KEY: "${SIGNING_KEY}"
      REDIS_HOST: redis_settings:6379

  settings:
    expose:
      - "8000"
    working_dir: /nocloud
    volumes:
      - ./nocloud:/nocloud
    image: cosmtrek/air
    command: --build.cmd "go build -o bin/settings cmd/settings/*.go" --build.bin "./bin/settings"
    restart: always
    labels:
      - traefik.http.routers.settings.rule=PathPrefix("/nocloud.settings.")
      - traefik.http.routers.settings.entrypoints=grpc
      - traefik.http.services.settings.loadbalancer.server.port=8000
      - traefik.http.services.settings.loadbalancer.server.scheme=h2c
    depends_on:
      - redis_settings
    networks:
      - proxy
      - grpc-internal
      - redis
    environment:
      LOG_LEVEL: -1
      PORT: 8000
      SIGNING_KEY: "${SIGNING_KEY}"
      REDIS_HOST: redis_settings:6379
  redis_settings:
    image: redis
    restart: always
    command: redis-server --save 60 1
    networks:
      - redis
    volumes:
      - redis-settings-data:/data


  driver-ione:
    container_name: driver-ione
    image: cosmtrek/air
    restart: always
    working_dir: /nocloud-driver-ione
    volumes:
      - ./nocloud-driver-ione:/nocloud-driver-ione
      - ./nocloud:/home/jahor/nocloud/nocloud
    networks:
      - grpc-internal
      - mq
      - redis
    environment:
      DRIVER_TYPE_KEY: ione
      SIGNING_KEY: "${SIGNING_KEY}"
      RABBITMQ_CONN: amqp://${RABBITMQ_USER}:${RABBITMQ_PASS}@rabbitmq:5672/
      LOG_LEVEL: -1
      REDIS_HOST: redis_settings:6379

networks:
  proxy:
    driver: bridge
  grpc-internal:
  arangodb:
    driver: bridge
  redis:
    driver: bridge
  mq:
    driver: bridge

volumes:
  redis-settings-data:
  data:
